# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
# https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
# https://docs.fastlane.tools/plugins/available-plugins

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push Development to Test Flight"
  lane :push_dev_to_testflight do
    build_xcarchive scheme: "dev"
    codesign_xcarchive scheme: "dev"
    xcarchive_to_ipa scheme: "dev"

    push_to_testflight
  end

  desc "Push Staging to Test Flight"
  lane :push_staging_to_testflight do
    build_xcarchive scheme: "staging"
    codesign_xcarchive scheme: "staging"
    xcarchive_to_ipa scheme: "staging"

    push_to_testflight
  end

  desc "Push Production to Test Flight"
  lane :push_production_to_testflight do
    build_xcarchive scheme: "prod"
    codesign_xcarchive scheme: "prod"
    xcarchive_to_ipa scheme: "prod"

    push_to_testflight
  end

  desc "Build Flutter to .xcarchive"
  lane :build_xcarchive do |options|
    scheme = options[:scheme]
    flavor = scheme

    sh "flutter build ipa --release --flavor #{flavor} -t lib/main_#{flavor}.dart --dart-define-from-file=configs/#{flavor}.json --no-codesign"
  end

  # codesign xcarchive with xcargs -allowProvisioningUpdates
  desc "Codesign xcarchive"
  lane :codesign_xcarchive do |options|
    scheme = options[:scheme]

    sync_code_signing type: "appstore"
    xcarchive(
      workspace: "Runner.xcworkspace",
      scheme: scheme,
      xcargs: "-allowProvisioningUpdates",
      archive_path: '../build/ios/archive/Runner.xcarchive'
    )
  end

  # build_app generate ExportOptions.plist, allow it to build an ipa file.
  desc "Build xcarchive to .ipa"
  lane :xcarchive_to_ipa do |options|
    scheme = options[:scheme]

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: scheme,
      clean: true,
      export_method: "app-store",
      output_name: "release.ipa",
      archive_path: '../build/ios/archive/Runner.xcarchive',
      skip_build_archive: true,
    )
  end

  desc "Upload .ipa To TestFlight"
  lane :push_to_testflight do
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      api_key_path: "./fastlane/AppStoreConnectApiKey.json",
    )
  end
end
